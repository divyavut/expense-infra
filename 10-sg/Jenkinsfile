pipeline {
    agent {
        label 'AGENT-1'
    }
    options { 
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm')
    // retry(3)
    }
    parameters {
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Select Action')

    }
    stages {  
        stage('init and plan') { 
            steps {   
               withAWS(region: 'us-east-1', credentials: 'aws-creds') {
                    sh """   
                        cd 10-sg
                        terraform init -reconfigure
                        terraform plan -out=tfplan

                    """  
               }
            }
        }
        stage('apply or destroy') { 
            steps {  
               withAWS(region: 'us-east-1', credentials: 'aws-creds') {
                    sh """   
                        cd 10-sg
                        if [ "${params.ACTION}" == "apply" ]; 
                        then
                            terraform apply -auto-approve tfplan
                        elif [ "${params.ACTION}" == "destroy" ];
                        then
                            terraform destroy -auto-approve
                        fi   
                    """  
               }
           }   
        }
       stage('Parallel In Sequential') {
            when{
                 expression { params.ACTION == 'apply' }
            }
            parallel {
                stage('Bastion') {
                   steps { 
                        build job: '20-bastion', 
                        parameters: [string(name: 'ACTION', value: "apply")],
                        wait: false
                    }
                }
                stage('EKS') {
                   steps { 
                        build job: '40-eks', 
                        parameters: [string(name: 'ACTION', value: "apply")],
                        wait: false
                    }
                }
            }

        }
     }
    post {
        always{
            echo "This section always runs"
            deleteDir()
        }
        success{
            echo "This section runs when pipeline success"
        }
        failure{
            echo "This section run when pipeline failure"
        }
       }
}